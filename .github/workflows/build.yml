name: Read Organization Repos

on:
  push:
    branches:
      - main  

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:

  read-repos:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: List Repositories
        id: list-repos
        run: |
          AUTH_TOKEN="${{ secrets.AUTH_TOKEN }}"
          ORGANIZATION="cyman-paper-translation"
          
          # 获取组织中的仓库列表
          # REPOS=$(curl -s -H "Authorization: token $AUTH_TOKEN" \
                   "https://api.github.com/orgs/$ORGANIZATION/repos?per_page=100" | \
                   jq -r '.[].full_name')
          
          # 获取组织中的仓库的 Clone URL
          curl -s -H "Authorization: token $AUTH_TOKEN" \
                   "https://api.github.com/orgs/$ORGANIZATION/repos?per_page=100" | \
                   jq -r '.[].clone_url' > repos_clone_url.txt 
          
          cat repos_clone_url.txt
      
      - name: Upload Repo Clone Url
        uses: actions/upload-artifact@v2
        with:
          name: repo-artifact
          path: repos_clone_url.txt

          # for REPO in $REPOS; do
          # # echo "Repository: $REPO"
          # # 读取仓库内容
          # CONTENT=$(curl -s -H "Authorization: token $AUTH_TOKEN" \
          #             "https://api.github.com/repos/$REPO/contents")
          #   echo "$CONTENT"
          # done
          

  build-mdbook:
    runs-on: ubuntu-latest
    needs: read-repos
    env: 
      MDBOOK_VERSION: 0.4.36
    steps:
      - uses: actions/checkout@v4
      - name: Install mdBook
        run: |
          curl --proto '=https' --tlsv1.2 https://sh.rustup.rs -sSf -y | sh
          rustup update
          cargo install --version ${MDBOOK_VERSION} mdbook
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v4
      - name: Init mdBook
        run: | 
          mkdir paper-translation
          cd paper-translation
          mdbook init --title paper-translation --ignore git

      - name: Download Repo Clone Url
        uses: actions/download-artifact@v2
        with:
          name: repo-artifact

      - name: Clone All the Repos
        run: |
          pwd 
          cat repos_clone_url.txt
          cd paper-translation
          # todo, clone all the repos
          # cd src
          # cat ../../paper-translation | xargs -L1 git clone

      - name: Build mdbook
        run: | 
          cd paper-translation
          mdbook build

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./paper-translation/book
  
  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build-mdbook
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  